@model WorkRequests.Models.WorkRequestViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.WorkRequestId)
        
        <div class="form-group">
            @Html.LabelFor(model => model.WorkRequestTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkRequestTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkRequestTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkRequestDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.WorkRequestDescription, new { @class = "form-control", @rows = "3", @cols = "10" })
                @Html.ValidationMessageFor(model => model.WorkRequestDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IssueReportedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 read-only">
                @Html.DisplayFor(model => model.IssueReportedBy)
                @Html.HiddenFor(model => model.IssueReportedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IssueReportedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 read-only">
                @Html.DisplayFor(model => model.IssueReportedDate)
                @Html.HiddenFor(model => model.IssueReportedDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.Departments, "DepartmentId", "DepartmentName"), "-- Select --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("User"))
                {
                    @Html.DisplayFor(model => model.StatusName)
                    @Html.HiddenFor(model => model.StatusId)
                }
                else
                {
                    @Html.DropDownListFor(m => m.StatusId, new SelectList(Model.Statuses, "StatusId", "StatusName"), "-- Select --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriorityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.PriorityId, new SelectList(Model.Priorities, "PriorityId", "PriorityName"), "-- Select --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.RequestTypeId, new SelectList(Model.RequestTypes, "RequestTypeId", "RequestTypeName"), "-- Select --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RequestTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DueDate, new { @class = "form-control", @id = "datetimepicker1" })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 read-only">
                @Html.DisplayFor(model => model.CreatedBy)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="text-center">
    @Html.ActionLink("Back to List", "Index")
</div>
